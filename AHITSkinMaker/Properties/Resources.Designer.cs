//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AHITSkinMaker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AHITSkinMaker.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class {MODNAME} extends GameMod
        ///	config(Mods);
        ///
        ///event OnModLoaded()
        ///{
        ///  HookActorSpawn(class&apos;Hat_Player&apos;, &apos;Hat_Player&apos;);
        ///  EquipSkin();
        ///}
        ///
        ///event OnHookedActorSpawn(Object NewActor, Name Identifier)
        ///{
        ///  if (Identifier == &apos;Hat_Player&apos;)
        ///    EquipSkin();
        ///}
        ///
        ///function EquipSkin()
        ///{
        ///  Hat_PlayerController(GetALocalPlayerController()).GetLoadout().AddBackpack(class&apos;Hat_Loadout&apos;.static.MakeLoadoutItem(class&apos;{SKINCLASSNAME}&apos;), true);
        ///}
        ///
        ///event OnModUnloaded()
        ///{
        ///  Hat_PlayerController(GetALocalPla [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameMod {
            get {
                return ResourceManager.GetString("GameMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Info]
        ///name = &quot;Change Me!&quot;
        ///author = &quot;Change Me!&quot;
        ///description = &quot;Change Me!&quot;
        ///version = &quot;1.0.0&quot;
        ///is_cheat = false
        ///modclass = {MODNAME}
        ///icon = icon.jpg.
        /// </summary>
        internal static string Ini {
            get {
                return ResourceManager.GetString("Ini", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [skins]
        ///{SKINNAME} = {SKINTEXT}.
        /// </summary>
        internal static string Int {
            get {
                return ResourceManager.GetString("Int", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class {SKINCLASSNAME} extends Hat_Collectible_Skin;
        ///
        ///defaultproperties
        ///{
        ///  HUDIcon = Texture2D&apos;{ICON}&apos;
        ///  ItemName = &quot;{SKINITEMNAME}&quot;
        ///  ItemQuality = class&apos;{QUALITY}&apos;
        ///
        ///{COLORS}
        ///}
        ///.
        /// </summary>
        internal static string Skin {
            get {
                return ResourceManager.GetString("Skin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Template {
            get {
                object obj = ResourceManager.GetObject("Template", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
